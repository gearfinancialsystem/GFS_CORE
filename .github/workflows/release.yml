name: Release
on:
  push:
    tags:
      - 'v*'
env:
  CARGO_TERM_COLOR: always
jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Nécessaire pour créer une release
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Extract tag name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1  # Action plus moderne et fiable
        with:
          tag_name: ${{ steps.extract_tag.outputs.TAG_NAME }}
          release_name: Release ${{ steps.extract_tag.outputs.TAG_NAME }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-crates-io-rust-libs:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        run: cargo build --workspace --release

      - name: Login to crates.io
        run: cargo login $CRATE_IO_TOKEN
        env:
          CRATE_IO_TOKEN: ${{ secrets.CRATE_IO_TOKEN }}

      - name: Publish gfs_lib_core to crates.io
        run: cargo publish -p gfs_lib_core
